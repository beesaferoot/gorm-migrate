name: CI

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [1.24.x]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
          cache: true

      - name: Install dependencies
        run: go mod tidy

      - name: Run tests with coverage
        run: |
          go test -v -coverprofile=coverage.out ./tests/...
          go tool cover -func=coverage.out

      - name: Build
        run: go build ./cmd/gorm-schema

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"
          cache: true

      - name: Install golangci-lint
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin latest

      - name: Run golangci-lint
        run: $(go env GOPATH)/bin/golangci-lint run --enable=gofmt,govet,staticcheck --disable=errcheck,ineffassign,unused --timeout=5m ./...

  # security:
  #   name: Security Scan
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Set up Go
  #       uses: actions/setup-go@v5
  #       with:
  #         go-version: "1.21"
  #         cache: true

  #     - name: Run gosec
  #       uses: securego/gosec@master
  #       with:
  #         args: ./...
